using System;
using System.Security.Cryptography;
using System.IO;
using System.Text;
using Microsoft.Win32;

using System.Diagnostics;

namespace CLDecipher
{
    class Program
    {

        static void Main(string[] args)
        {

            string variantChoice = null;
            string srcPath = null;
            string dstPath = null;
            for (int i=0; i<args.Length; i++){
                if(args[i] == "--variant=2"){
                    variantChoice = "AmongUs2";
                } else if(args[i] == "--variant==horror"){
                    variantChoice = "AmongUsHorrorEdition";
                } else if(args[i].StartsWith("--in=")){
                    srcPath = args[i].Substring(5);
                } else if(args[i].StartsWith("--out=")){
                    dstPath = args[i].Substring(6);
                } else {
                    ShowUsage();
                    return;
                }
            }
        
            if(variantChoice != null && srcPath != null && dstPath != null){
                AllInOne(variantChoice, srcPath, dstPath);
            } else{
                ShowUsage();
            }

        }

        static void ShowUsage(){
            Console.WriteLine("Usage:");
            Console.WriteLine("cldecipher.exe [options]");
            Console.WriteLine("Options:");
            Console.WriteLine("--variant=<2/horror>     Chose the variant");
            Console.WriteLine("--in <path> Path to the folder with the files to decipher");
            Console.WriteLine("--out <path> Path to the folder which cldecipher will write to");
        }


        static void AllInOne(string variant, string srcPath, string dstPath){
            if(srcPath != null && dstPath != null){
                if (Directory.Exists(srcPath) && Directory.Exists(dstPath)){
                    string password = GetPasswordForVariant(variant);
                    if (password != null){
                        //Rfc2898DeriveBytes key = KeyFromPassword(password);
                        DecryptFilesInDirectory(password, srcPath, dstPath);
                    }
                } else {
                    Console.WriteLine("Path does not exist");
                }

            } 
        }
        
        static string GetPasswordForVariant(string variant){
            if (variant == "AmongUs2"){
                return "qd=3psCvr7gfvRqB2*E-e_^*DqVA?3Y4?v$@Lmq6EZQD56dG88+n+Rpewc8cqX#LvMQmS&Brpmd27gv-VrV4TLmm&q&dap55xAA*xpn5c=2@LYKXf%zq!AuVha$-qNwqmA6p?S^zV^kf8-SCUb8X!Rh3QNZZGtVH=&7t59BQXwBEndCnV5Xfm%ahRAAP=zeeWYU?=U_VMqxmCtCs2YfavSG#!aGkr?!*aHz!%?S5EbHQ*aa%uP9Z2U&gag_5KRN3!St3-%pxPKF-!4%XkjcH@?srBVW@&bJnhPx$VrCN=C5vh@c8pjAK8_U9rTJcdrECPg24Vc5$pSQBn23dL3n^WH8Quj7wzS$?jA6NacTCCA-Hx%T?xhp?=!zXfuVr+CjpSx-_3g^%pJvF?$Y!&@we8A!YCx*drc94^N3yXxbPc_Z4d_ve3u_#&PcdPKw$y6qVYvEH5F9xytWaakB3ypANFpGrGd$f@@wUDGtu@2nF*%!p3CRMgh?_XZ7Q*&Nz?8*T8-vsLAJ6PT^wsX5xnrMC-=v&*ja2yLqQVqFjfq44GsM+q%a-vKXW+USapuUk+$?!w!eL3&QHjNwC=84a$2ZueR98t=UWtYaLdmg49jFjNxvx*Exyzjasv?K$b5cc$-hbBPd3Eynf$vbmM&n8FVfDTfANye@Y+wc#LFgZsyWtBsH66%6$jCJnc#TFm3!fWQ+c#vJ^=7KMh3!Sh#Ff$?M+EA4WE&pr-LTVjx5xQ??645MeWHygn2udXDB&mkRNTxmcx&&b3#p8uNdGN5aKV=#A?228U9FVw9-yw-mTh8D5g5GJdX!J+?rc-ZeuMc%TbaF#r^*P966x-WDM38F@k$mfs4?vx&$ZUkMGUuc7eRw@@_6*LGc$PCJNHa!6Yd!^XUeA*hR#GqPTmb7emamC!d@Ypj8Lrsk&ArWjx6-dB*5XVESmTfEnhtJaepp=c^DAHUWAtvq$6f$Avrp+rfBsj28TXw53d%#QCze9qrn$79u#H%8Pg_dMTM3WnJy%zs6JzTnqKbDvgw7#mU3R!aHdvfF#=PHYw2$-hQKeK8^#vDt*s7x9E_44uY!?X_y%tXd4547FMB54uEGXgYCrGKRG%-3=q=4egp2weKdbJqPyE^q94V8emn%nCZCXmDrg6aaXV^fW?eZhLV8b%Qv56Xyk2$A^NX3$a?5#S6FmP?x6WvR#6#Pcvj_PpYS+q*NZZn@q@9BF_bjuXQR%VwSW-m5JXXY8*AuA=xT8kzabset?JN*e3SjT3^6SCsAW?nXdJE2Y*%Cfh5_+bF#vbB-dZ8K_n%!47Btn2J+aj8Ndh=YuLGh+%3S*xcbHFa3!jQb5hAF^4kXgumjwtsK=L@y5bx5QBtsY?6ugG55!xjUWK_=P^jge4jMgZCgu$9jpN4stYvmV%c_re6sBrz+Lg5yc3_v5P%ZcU2Q5CweQzyv+-wzggTyVp+U7vJ3#zk3NP+UB9Czt27J5@rTcxV^f?8j$VhS@8tTZD^7RKKxz8+THTRK_$7AfHJwD&n$%8$GgD-96y!M3D@ak8Y!KrSSFE+gDeh=%cX&dcGjH3ekjC*@aWD-2CqRw8@d&d+kD8r-EW73Q4W^Tz3D^KSMjKQsDmga7brYv*7T=vqh9cM-v+nbAHfUZze=j&qBRTN+&*5mbsY&Rq!Wu28Ju!bnB+EkZ#DF*h*Db?984C7ss?$ZdHw=VE55ZSTeTRJxEgF4v8Fc+@p*L^$@g972mdUZWmGR&bN^5c@M?afde9nuNTf&DPmduvkuFeR@L#X#GLU!cNQYzhuHyzfhTK%zkT&g-TUjHTY6^-W$_erFXSHC&&LHjwCE%gxctCeQ3Fu3P$JgU+x@^J2AK_&maX9EAWM2GtYyYT2cLJtbGJNvF9JxDHNTqR=V4d=q2Hg@3AqTgpF8@KG@Nv$s@6GSTe$&N-eSbKQZjLV+2@Jgj9ezP@u9zNDvWUPKY=aPx+#u^MX_H#Yb@eQjMjT%B?#kTxPqCMGAAkBd8uAUj?B$^x%7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGV7dVTuJjLG?SfJs#f5Z$b7-uVahzC-w9SYbh5C^CujAGVe8";
            } else if (variant == "AmongUsHorrorEdition"){
                return "MNBFDGHJHYTRFVGHJUIKOKIJUYNKKJJ67898645NHGJKK082457KHCTFRFTTFGHNBVFDGhe6=RzZ$$GDLdjU6VQb6#xwcBYFwS6GK4YyMKCUPCDX9sr?9?zmt-Q9qq&ck2FSgcCzRGRM8spkXDM%R=Zd3_v?uMeAbfKW4-M^7Kv!GfX+TzH5HW=tBS9N%CVW9UbJM6ABGQ^nX5QzLfNP?$H5+tw%8@7r+F72t_SR!UaGB$A8#rpxSv&Dye$w4%z3H!!_VD=+&XeKmfEPX$t2&D2=yx7!d%S6%$RNm&%w3Z#J#JKu&fSs!LPWxrhASJ?C!grX+MFj!gR8LFmUrsVY+uvpxDmRJWDLLepM99-8n$5Gz&M4ukJXq6x%reX5zg#HTGzpCsY-zXB$E5nyx?TfTYj2S&Gf=NpYcuX5V%&y82BEnDuwSSL83jQ^+Cpzfj$fu_=-vHmE3-fmvYZtnUFYzRqFy43j5zNWbDecJk%s$JZ9L_RNqzp?QYD*3R#&tEjPrUZx3R$^cAfyR?gFVw9AtWmE-YRQ#tW-@ERXTGrYbwGJqt^7Yf4spQ2+42#$=-CDSdnzAdL%=Tcq^f5+*F*-?QPBDL#?hvq?KS7nZ9jsW=#fgbJd4e#ZpV_-EGnEduL@t=3cR#p&SF4dkpN!&Tz-gLptV-kkF#Ku#Z#H7b@_*=tZfeappw%h5n5Y2K!!UzqnZgMyXvr=P=V29SwxVS=H_Sj4Q#uzxJh+3SEvZmQtgzL!3EsJcue47BWP5t5f4wqS$j@#jmJ!?WVTm6YDae8y?-%BcTS556Xy#ZNKzLNGsNWmK5@qcAMLTjdQ$4B88Rfkg!EQY32c4F44QbECaAHNPMD@D@rjV4!JTaC!c6x3*MkDff2Ds!Z&THt_?cKu+VRHNEwxm#+-vvnTccrj8LK7=KLnarsPQ$BDvv2w5sZ?*Vm5HHM#C=QNU24tTvpfknSABpBczcYdPAfA&a^DQDAS64b$3jN$x@EuLXwdC&@xgM4C$=EVYmdP4ThrKeDQw9t+m=vdKh_vG3N8knrm8*=&wxUM*Pzaqzf7yj$GWExMD-dWma#73fe5MDADaq4VB#7x9B7+^+wrN%6ksD+brPKw9PFj+xKHcWjgvA$P-2$CXnv#ZRY#GrTyr3NwKjm7eUrHgYs@_AU9Uh@p=Ma+bnA7UytLFNQdnWaP62MUd=#9^S@M3e8Ab5HrGY3^YMQ@+qH&7+cVwJ2qZ-jS+t_D@Hu6h=E=!^fdAMN=R@hP7#KgKMcZrG5yeNpbyW3wYT!_N^Y_!=ygFYaEqLg+f&FX$fzska*+?tUCPKDxQy2JA7dZ%UnyDmH%Yw+8=Jtu?aL?nj&PFTwXXmckH-8y#tmTr-DJ_UfaFHHP%!k2fj#4pXzevczu^HSmJj@PVyGgbPKKp4z?UBgTc?y^sVR?*C_vB4Zz!ULrtHSK5*Mytwwjvs+z5_xC5fp-cFneMM6!dy^es@URHkNWAgVseG^w*DWGUy&=KWBenrEzAzfLKfhW$vr*Je9=_jQU_GY=QzPAJR^y_Q#SgdTfkjMJQ%nwt!LtKLk+T7kFwAEHWYaC^e2D-djF&jNNwHKU5PkpfAkmE%t7&P*MPBhpRXx+G4p^L&QV-!+vtNUv#-Ke@FDde6xBzn4c5yT3ucf95VzFy%L$!y6GbKCeV2NqfV!hPn5p3b8W=rghNWFLrw7$=SdQTFGjLLr?sAAvV=TN48UJE3wkg9NyXe$9x7Yr4G*WBkTrJ*xZHduYZn$+X%-xP?rR*!R&nW^k8v+tFW^az3zavn$fEk#cUyN45=nDy&r&c=2ZFGS&MXFnZCVTZYYet-?-VeTJAbj-kyc=_S^s2@yVe-!W46d-AfZc2LPL9j3KMhaUcJpz$QWPdCUyU4^9%QvaLMR-2=uG=F9*yPj+*cZGVR^jMQPS^p%UAezH7p9S2BFf$BU#zJpFN^5gvG^QKqeaWk2G7$R2n@TCh5c7S#5$kQthbBBk9wWP4cYYA44Ftes4VjN-h&TWZADuzugsV$5Tn2%dkXTLCTJ=#?f9J6?7CDc^6A?3!Se-cSV%6_5ff2xEMHLrwvR9y^bacr22d!?F9&WfkH-=dxgy43wRfs4R?Gwsh3V@sQkaprar44u#AqaQw#?CQpApr37Tg$%SydV^49NjbwkBBDK$fRwARG7NkqWLTacr$gsu$4S@5nqR7_y&V?!Rq-_CxM3bs$QqUutjA2w+PP28bY3snVez5dJ3y#fs@C3rM9GsgfFzSCAg5ZyvKRMy-##*rSqvQ2#f&uu^vpe$4%cF$nABxAQ?%5X@G6WWNZ4@s3EwWN2R5Yf^s#vVxfYSU*NJJ_AN@SKyvNDb$VnYSJ@5hQL5HSqGmLrk?XndNXEJyckc5Bda_gwuq2D=t9G4yDvuGXPsw^_GLvSRu^N*w-XKgh_ASWzM+kvmKC+@&3HneAHgg*u7y*xcx_eP^Y*BR64yhsXLHhhN!Mm5k^+gUGu+kMYAQ?F$Pm@q!!4CREDrFnL6y4jwvP$zjQdr^WK##-hT=$C+RCFt*^^T^vDyvWS?T2E3ABahcYJhFRHMBSMHnpWMgDu?WY%=*A@Fqp99aHKPbf64g2-KD!SCdfcwULM+5eTLUX9rSa!26-Q4kq7B9pR&jZ#+AyT8=Ja8=K6fgEwR@SvRX^n#Zhez&6UM&&FkAc!_d+haGnx?&BQuhH4@$9%WepFKzN&9zEuE4LX5mrZ?KLsQ3fvEw6H!nzmy#!fAcugTQU-##+FbmtYFnGb?Dh?DBdCwP65d4#ubJbzK8nj!B7dt!5-_X#Jb886s%M%fnT2A9Cy9Qw2TDKcWDfmJ@yGFyYSj8NK!J!hZjU#uP4U-sC9#aAq!MSw+*TW?mPmwXZELE^Z6dWDy+EsJ+7&@jL6!4vF7tBcxNuZF!&_F$d38f9wVLcxtVmYuUnvkw=sfg#xBh78HBKS-^n9x_3Hj@*5yvbJPhzA79QNJUGx!$zA82wEgUTr9PHVHz&PQar=368zs2gK*6QVxdUP@8hEBmBsZ6ybTPFD9peNsTmgjQ&!Q5WTJW_wgqLK%Y=Ant^JemrRNW*Rv#BNH9tK8s#pyA^h9hZH9UY2+UD@L?2B&_-NVZ?n%ZbRHURp9%D2d=@-!yt_THPR&%rLEP*B^2!Yd=6+*QjdR3U_zd!bC9PxbK=*3qB&3V_mHsMsu9D-zGsbdQTBfy%6bbUe-=&Lm3!zWWt6w=pFLD$s*P@kDN#Er8#4ng39g3sK83s$5UbD!mNgqKQj+A6kn@^uHKQvrzL5fd*3QwzRXsNhqwX+4XQMa-fA2#rG_NBJg*vf%-p!2GxpLLkeaVBzcW424%CWvq%fBtU4^4Hp%XRB6*^d$D@-Q5AxR5QdX+42v#eK&N!sX*nhg2Z@R&asrS&&9qkEJLXyC6!t6#JJnVKD-VW3StPU43Z=u9YbKVj5g%*KxqDZtn$_y^nWjedKrLPkD!$t#^B9g2=aZMVLUU6Ee$^deAR@mhz$AXTP5Z8Rw^qtGcZHF9!*Z+d&H&GGhjpePp+%U4g^9kjPmHhb96WFzXh#SM^FDmc@J@hZbZEh8LYs7WasMguy5hKtTar^n7qu?*+nY?fB68eCycm%zxg7bAEWqUuTq4M-7sN7ypvR*DP2uY6X&jhJ@cJX_8P-6SuRt&@F4Xcw!bqsxf65d@yjPnxZSU4svhW5BcNE-!Z=SMzjMHxtsaRXwZR86e4pbj!es6QSxHk^R2beBc4zh%F*K2^wrbHv!MK$?JR4wZn#_vNym@PDuadQL*XJVpTAqBV9gKS$uWT6?xvW@xHH+k7nH?AnuDYmqabe#-!A6h-xnP?$^pBNfaf5SVMJj@p@N$F5fCH7W*jK=p2AtY*wX!^hMXke*8uL?j5U_hRRDV*9HBCmL3NpM@3yG_J2t#pH@z7F+w==@p@SS&E+$$G*xzpGKw2$xnBU+HZpeS?*Bf7ftXjsz3Ue*Q9GvA9jHaDDKY$YUJr3dy-Sne6R=6s7VbZ?Kh$HGb9TL+RyrXus3K#!B9f*Ku7XqdVHHjh#^Sqr3gsSm9c#bn?MFS-KQwZk@UH3s4HH3_T3537xsCENzEBEgGx*q+dRKfP*xvyNsUFfDeSfB_WfUyKTxumPm#-r9LKNkwUt&rWJ_FLPc_5x6N4?8Gs%9muWSpg?%U$Ztx7ChLR@Mjv2^CZ@p6xeq+tV!ECUs6SV#b7LCrexTx24U5bcGM?9xfS#XS_=sqD_&L=H=KfX+*^%^9R5n!KEuTummkL7b7gKN+-jS_cG=7sYFU$&bWNdLp%RyPAZ^EhJ%NRkFp?Aaq**LKcwC!A%%LE=4-m_NgAbFNzW62J8cStRp-xPvu6N2HU7Kq%^_aSpjKjhQjG3yvar$9&L3qywT^Q3SNKHC4vJVs5gshmHL$AE#pBxquLY3f^R4K%YCcX7pXKFRDq_yb@334-pFR#EGnz#6tG7JYFHpcx5J6V5ZnavTb8b+%a9twGPnVpHy$Fvcm4x&veKY@K4$%vNM2hW@vV6*X!SCGb+D-n7zS$kEkf@hJ#6ZwUy7ge?A?nnecEVT+hwhpc?trVUfs*@dyhgfKGwcA%AB@ad?G$VBBMnFpst%cyk%dJ^ea9k?7PDrqxPd*3n4z*!JwYS#-Tg*!qX$GmTvYaASJw#^Gk89AyJJqNL_UbstH4TS!$Ps%HWyawk@T5m=n*c4KtT8bAA9SQ_2C^$ePSr9!B&M=pHG&QKWctgNSP3_!t#jfw3#s?FfH6w=bDT88T7j-a%DYNk#FBm54^6uX*#vMJnQp+sXfmLE*MKbPAL2rggyUWpQC4X?24!m_Fg^a3aDWPG&aqJRXc4K7h3kZNxXD@Jw9b%^dZSF8sz@xXp+%W^F&pwLm4g7EGcp-jpM!2Wpv?YX*Zxb@AS#^#zmMJ3VHa+GEU=!$E%&PLwChhYw*akW%Z$$HmVH#=Khh^z?35?MXg6PvQeY4H6FmUaV46Tx$VkcmJuPxUxWRkUYt&Q6bsP3h&y$ZPCjUtN46zEH=?7v%Rew%K?Ps2@%?TmEJ@A7EmRzRR@Fqb+jG8=kyDh7dE!FjN!@%jszaVeCDQ=DtgqjsAS%?3cy7-A%AN?vQ2xhdu&n*mwNHr_Ph3%Uc#H@Da4JDm%W#HjZ%gyfvmZaDr?xvSDp#!vQK*Lc&r?mmB%H*KN3cwAY8y2Z%w+fJ7V3m*dW-N8qFeDeLxhVZD8Q2dX2ztpvHHL@VXMX&LPTtT7aHugmJQLd*5X&r2A6supX#vN%*@=j3jYjjDn95647gn5JprA_ThXM%@3d_Pc&SdVt2EmG2cZay!@ER2r+XyF?7MvgD8LyrJ6#j6CGAH3a&=fk5tSJ5D7L_55WcMCYt&a^=px@jwz@vd+QG&4RK5r%Z_LVcUCGEUeDxFZScS8vyP!L=vHM=3EV_n!vQVkYC8+XBHw=&kdw%LVBFsbNm78v8zMe#Y^$cny6kbU7+CH^k29V_V_QkHZH$uFts_J9Qb2LDr8@R2!kQNXRG?+e%9=at!RZ!WD!dn7J7WVrmx=Vg%fRsKC$r3H2_-8y&Ht4@^wEZcVe7M@3WWfUC*_arcC9SG7W4Rb_GEgaLtZeUN8wqNtc*us%5mdQ%gdJA!W*h96YqT8!2Fm**mMG4+XKsjcyHbg+5*bH&phu=!QC%?4Hu=YMK2+qzfCRQ@$+axGaf3Kaw%FLB=TMHNdnC+_r_H%uAwu2A5-#@DRJ7L$?v%dD*7b=Zv327e#%+J49_atY36Xy4hPV_zkmbkFbasEnj!j5Zs5Nee!8r%wZP8Pdxy?6@M=S3xbVHgP!?B7WU72v^KuQNJp5GCRMvzHPAKr6m@BeT!Htcr@v!BDXFA@FN@^^TECraF3Ry&4#PQGsy5+NT7DpYKrUdp$CA!HYvnfsx6#c9shBj9DbJ%BFBQ3_p3285-_daz24c^G3hvE@_fg-6GL*RQUV5G=46v&&_KRwuCJV23g&ea@2QvCXRXjQQgNwLfcwXr?CjygcXGkhtwkn^GUb3$NAPJPcmrvK_edUcrThtN9%u47HRfE94Rx4eq@37DUDE37b9R6x?Fm8ArCDtGA^kk&s#bkKM-TymK+r@vhAvdSz8QD&mCFW^-zURXTLj*UjFZJN5rs^UeR*-xkchV7$w*pNXggFhubA!&USQ-gLWRv7DKRg8fqR&MnTFqT8vvANXga$mJW^jCg!?w!cv2LwALWNe!d=k=H_F3mKu56G3#YKhX=9U&ze%DFtJJkAe=UYJ!Wuj$3XG+M+kjM@NHx5-@_F!Werz9fJe7LGGs%!XQXJ76UF8bNbZmNw6*kzLF+NFyBGQ$ctyky76v_2uTTt@6cGSTRB68P$M=Wbycrs^G64@sd5s&Z-LWg&9++5w^6DdFn*WJhG48H%rBXqwNNqH3m*zd-C*?#_s=uqqhMyT4CLEdbPwEJ84-tD2_5SW8P#PewuJ=qRxLCVW4^8FR7wrg$BYLYDRe-wfPsjckJ#6EMEwUsy+dn8D2NWv*czH%9$6w3NU*Ypqm&qf&PhZe33tySMbKL@6gsLYxSPq2?VxW%WD&U9n$ALqJTa2K$g3@^sKhrG&qLPpjmf4!xve3!PCBsNbzmDZcrGkb88&U3&&Ry5&B3A5?*gad*yBAj3E&V?B_zkMs972ryjtqA+GjgRJXASW+-VWR3_x3aUj-m3DDnBVdvmPn@WRRdYjSYHZd^9rudV4M_nC6Z=u5keCFZbC8ZxFtJ9bB+P9n*!CGmj^_DFzPedJ-dm#VU*7&Td*c6%jV+T7DfCgpKveKybM@8@rNgE7MENt=hDZ-emjGDZ5NrcDsNd%jyRH#&GfsNcpL!MP8#V%uSpSLG@zNa-sKHFzdSr%UBHJ?n&WZaAdV&SRLcEjrHmqNT7udcsNs@F@%dteE7Jw&FGEB3dG5zqA+&_zD^JaEDYt-Rkd?m#sYq@asw%t6rZVmywxRgkMX5fa#r?Gch3GAhUeZGyV+rRJ@T7shVGJgTk89XNWYr_b@sb#Cqm#%P?aA325s&__NH+_u8a%w3wWw-Ary6BurRXN-nduCEwyJ^y^D6P3bBF8R7C7JbXqgHHF3D5WcQQ3$Q@z@7TtaNw_hFtcm&hB3+PpfuUGBF9t7RkbR#U8=j+LYr_$M=5L!8RLRan&yQa@eRnJUf*wL8ssEjtAkgYL*H!eVzetxAM-zh^X=!BnkSKH7XVUNvCYyVrNf=!xh5WjnZA_Stgb6+v_jK9q+_$h37$#Yu5gvahWE^nG6FJhWxgV^hyn@zpbL4UVzdF54fxQ8^7!CgNut^Sdz%VS7j!Cx3YucShXbP4n2VFCR$3#76B4E-!Ckx*ztp8QD+DDV^mdNKSaA4HYr^t-ESW7LpR9M@uAAvX-2pW_L@s*kSBb-MzaY2@nWWZDSfZQ$jT2ppV8B8w+-mGFruFtaKV9bVf72!26dq9JZ&^M5-3KpeuU$N_Hn#DrAKBy5=zmqFy_4S@gfheKYLVmR?r96kNap$c!!d3YqsAFtegBzgbn%TpwS7sZ#E3nV#9D3+hpMxPd7QH5LxR6+8P_GN6Y=!89kdNBxpx4nur4abCNknFhWQm2*hsz@Dy!5HEd9S?FyYV5PV8-7TkJ&W+vbCQTkjV2T%xUd84DbxuHDUgnkvB?A@?zMr=Yq6L_6h_UGBH@Q8wx+a+FFpjmqC4tsYmzKKKp&hnZ*C?kuF_eY6ZyKPwHJfsYY?yMKHQ5b*yN%bMgDE7YQe!qatyDbrcrjNVtURYuq^7WPf_qDW@t&Ws+S=8Zcs4t!8TfhAq?nQnL7YvfB#nrU?&?&TNEHE5!bS8ceW_awzs7xW!*-hyFZjJYZd@u-gRLU427sF=z$VEwhZngfAPG4Q^$!T_WsNpNenu52F&4URFUgUA6@6dZeu+wwS*k#s=k5!U9b%mVUGkTZa-xJDMd=qC_bsAb=sXX$nRTYBMa%Fh2zctAf@Z$rLWeTM2dD&B+^u39HuQK4Ns5%Mr4fp?@95^qDM2e@n$kzbj4qygu6YEFx-nG=5+azMVeV4k=5+WEDD#qz8bE&fxg+Y#hYcwruvX8NW*8CvZ54S?Tc*!ym%cH7x9!SckvqRZb#3@MQ#jhrsATVZ^5Tree@3mm9Q9p#$nuR7Zt@YY*WFVjwMembVmUgwz5JZZqEnnAdUAZkjgEsV6VgSv_%y&t6*83Z*35B95k@4jEJjPUm*=NC2=PX8d5c*$_Acwa2jG-Ev*sRyB7ESwmz!P2MHd*&PSBhvcZCc-mTM=!rnB7M?RuTtz26basw4BVSs*5599E9tk9A8QpZbhx!+8XCrfMUsvmJQVaEz=QEkgq-y*bmQ%^WH%3#My-uyNM"; 
            } else {
                return null;
            }
        }

        static void DecryptFilesInDirectory(string password, string srcPath, string dstPath){
            string[] files = Directory.GetFiles(srcPath + "\\", "*");
            for(int i = 0; i < files.Length; i++){
                Console.WriteLine("Working on " + files[i]);
                DecryptFile(files[i], dstPath, password);
            }
        }

        static void DecryptFile(string fileName, string dstPath, string password){
            byte[] bytesToBeDecrypted = File.ReadAllBytes(fileName);
            byte[] bytes = AES_Decrypt(bytesToBeDecrypted, password);
            File.WriteAllBytes(dstPath + Path.GetFileName(fileName), bytes); 
        }

        static Rfc2898DeriveBytes KeyFromPassword(string password){
            byte[] passwordBytes = Encoding.UTF8.GetBytes(password);
            passwordBytes = SHA256.Create().ComputeHash(passwordBytes);
            byte[] saltBytes = new byte[] {1,2,3,4,5,6,7,8};
            Rfc2898DeriveBytes key = new Rfc2898DeriveBytes(passwordBytes, saltBytes, 1000);
            return key;
        }

        // www.codeproject.com - author: adriancs
        static byte[] AES_Decrypt(byte[] bytesToBeDecrypted, string password){
            byte[] decryptedBytes = null;

            Rfc2898DeriveBytes key = KeyFromPassword(password);
            using (MemoryStream ms = new MemoryStream()){
                using (RijndaelManaged AES = new RijndaelManaged()){
                    AES.KeySize = 256;
                    AES.BlockSize = 128;
                    
                    AES.Key = key.GetBytes(AES.KeySize / 8);
                    AES.IV = key.GetBytes(AES.BlockSize / 8);

                    AES.Mode = CipherMode.CBC;

                    using (var cs = new CryptoStream(ms, AES.CreateDecryptor(), CryptoStreamMode.Write)){
                        cs.Write(bytesToBeDecrypted, 0, bytesToBeDecrypted.Length);
                        cs.Close();
                    }
                    decryptedBytes = ms.ToArray();
                }
            }
            return decryptedBytes;

        }
    }
}
